service: backend

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: eu-west-1

plugins:
  - serverless-offline
  - serverless-dynamodb-local
  - serverless-webpack
  - serverless-appsync-plugin

custom:
  serverless-offline:
    port: 4000
  webpackIncludeModules: true
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      test:
        sources:
          - table: Vysae
            sources: [seedData/vysae.json]
  appSync:
    name: Vysae
    authenticationType: AMAZON_COGNITO_USER_POOLS
    userPoolConfig:
      awsRegion: eu-west-1
      defaultAction: ALLOW
      userPoolId: eu-west-1_MUEHMQ2R2
    mappingTemplates:
      - dataSource: Vysae
        type: Mutation
        field: createCompany
        request: "createCompany-request-mapping-template.txt"
        response: "createCompany-response-mapping-template.txt"
    serviceRole: "AppSyncServiceRole"
    dataSources:
      - type: AMAZON_DYNAMODB
        name: CYSAE
        description: 'Vysae table'
        config:
          tableName: 'Vysae'
          serviceRoleArn: "arn:aws:iam::${env:AWS_ACCOUNTID}:role/Dynamo-${self:custom.appSync.serviceRole}"
      

functions:
  hello:
    handler: handler.hello
  graphql:
    handler: handler.graphqlHandler
    events:
      - http:
          path: graphql
          method: post
          cors: true
  graphiql:
    handler: handler.graphiqlHandler
    role: ServiceRole
    events:
    - http:
        path: graphiql
        method: get
        cors: true

resources:
  Resources:
    vysaeTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: Vysae
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: Data 
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: GSI
            KeySchema:
              - AttributeName: SK
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    AppSyncServiceRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: "Dynamo-AppSyncServiceRole"
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Principal:
                Service:
                  - "appsync.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Policies:
          -
            PolicyName: "Dynamo-AppSyncServiceRole-Policy"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                -
                  Effect: "Allow"
                  Action:
                    - "dynamodb:Query"
                    - "dynamodb:BatchWriteItem"
                    - "dynamodb:GetItem"
                    - "dynamodb:DeleteItem"
                    - "dynamodb:PutItem"
                    - "dynamodb:Scan"
                    - "dynamodb:UpdateItem"
                  Resource:
                    - "arn:aws:dynamodb:us-east-1:*:table/Users"
                    - "arn:aws:dynamodb:us-east-1:*:table/Users/*"
                    - "arn:aws:dynamodb:us-east-1:*:table/Tweets"
                    - "arn:aws:dynamodb:us-east-1:*:table/Tweets/*"
